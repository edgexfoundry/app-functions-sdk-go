// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	interfaces "github.com/edgexfoundry/app-functions-sdk-go/v4/pkg/interfaces"
	mock "github.com/stretchr/testify/mock"
)

// BackgroundPublisher is an autogenerated mock type for the BackgroundPublisher type
type BackgroundPublisher struct {
	mock.Mock
}

// Publish provides a mock function with given fields: payload, context
func (_m *BackgroundPublisher) Publish(payload []byte, context interfaces.AppFunctionContext) error {
	ret := _m.Called(payload, context)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte, interfaces.AppFunctionContext) error); ok {
		r0 = rf(payload, context)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewBackgroundPublisher interface {
	mock.TestingT
	Cleanup(func())
}

// NewBackgroundPublisher creates a new instance of BackgroundPublisher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBackgroundPublisher(t mockConstructorTestingTNewBackgroundPublisher) *BackgroundPublisher {
	mock := &BackgroundPublisher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
